const router = require("express").Router();
const express = require("express");
const axios = require("axios");
const app = express();
const bodyParser = require("body-parser");
const FormData = require("form-data");

const fileupload = require("express-fileupload");
app.use(fileupload());

app.use(bodyParser.json());

module.exports = app;

app.post("/upload", (req, res) => {
  const formData = new FormData();
  formData.append("size", "auto");
  const img =
    "";
  formData.append("image_file_b64", img);

  axios({
    method: "post",
    url: "https://api.remove.bg/v1.0/removebg",
    data: formData,
    headers: {
      ...formData.getHeaders(),
      "X-Api-Key": process.env.BGREMOVER_API_KEY,
      Accept: "application/json",
    },
    encoding: null,
  })
    .then((response) => {
      if (response.status != 200)
        return console.error("Error:", response.status, response.statusText);
      res.json(response.data);
    })
    .catch((error) => {
      return console.error("Request failed:", error);
    });
});

module.exports = router;
